{"ast":null,"code":"import React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Ionicons } from '@expo/vector-icons';\nimport { useAuth } from \"../contexts/AuthContext\";\nimport LoginScreen from \"../screens/auth/LoginScreen\";\nimport RegisterScreen from \"../screens/auth/RegisterScreen\";\nimport HomeScreen from \"../screens/main/HomeScreen\";\nimport ProfileScreen from \"../screens/main/ProfileScreen\";\nimport SuggestionsScreen from \"../screens/main/SuggestionsScreen\";\nimport FavoritesScreen from \"../screens/main/FavoritesScreen\";\nimport CameraScreen from \"../screens/main/CameraScreen\";\nimport LoadingScreen from \"../screens/LoadingScreen\";\nimport { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nvar Tab = createBottomTabNavigator();\nvar TabNavigator = function TabNavigator() {\n  return _jsxs(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n            color = _ref2.color,\n            size = _ref2.size;\n          var iconName;\n          if (route.name === 'Home') {\n            iconName = focused ? 'home' : 'home-outline';\n          } else if (route.name === 'Suggestions') {\n            iconName = focused ? 'flash' : 'flash-outline';\n          } else if (route.name === 'Camera') {\n            iconName = focused ? 'camera' : 'camera-outline';\n          } else if (route.name === 'Favorites') {\n            iconName = focused ? 'heart' : 'heart-outline';\n          } else if (route.name === 'Profile') {\n            iconName = focused ? 'person' : 'person-outline';\n          } else {\n            iconName = 'home-outline';\n          }\n          return _jsx(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color\n          });\n        },\n        tabBarActiveTintColor: '#ec4899',\n        tabBarInactiveTintColor: 'gray',\n        headerShown: false\n      };\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Home\",\n      component: HomeScreen\n    }), _jsx(Tab.Screen, {\n      name: \"Suggestions\",\n      component: SuggestionsScreen\n    }), _jsx(Tab.Screen, {\n      name: \"Camera\",\n      component: CameraScreen\n    }), _jsx(Tab.Screen, {\n      name: \"Favorites\",\n      component: FavoritesScreen\n    }), _jsx(Tab.Screen, {\n      name: \"Profile\",\n      component: ProfileScreen\n    })]\n  });\n};\nvar AppNavigator = function AppNavigator() {\n  var _useAuth = useAuth(),\n    user = _useAuth.user,\n    loading = _useAuth.loading;\n  if (loading) {\n    return _jsx(LoadingScreen, {});\n  }\n  return _jsx(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    children: user ? _jsx(Stack.Screen, {\n      name: \"Main\",\n      component: TabNavigator\n    }) : _jsxs(_Fragment, {\n      children: [_jsx(Stack.Screen, {\n        name: \"Login\",\n        component: LoginScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Register\",\n        component: RegisterScreen\n      })]\n    })\n  });\n};\nexport default AppNavigator;","map":{"version":3,"names":["React","createStackNavigator","createBottomTabNavigator","Ionicons","useAuth","LoginScreen","RegisterScreen","HomeScreen","ProfileScreen","SuggestionsScreen","FavoritesScreen","CameraScreen","LoadingScreen","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Stack","Tab","TabNavigator","Navigator","screenOptions","_ref","route","tabBarIcon","_ref2","focused","color","size","iconName","name","tabBarActiveTintColor","tabBarInactiveTintColor","headerShown","children","Screen","component","AppNavigator","_useAuth","user","loading"],"sources":["/Users/Pankaj-K/Projects/MERN/ai-stylist-app/mobile-app/src/navigation/AppNavigator.tsx"],"sourcesContent":["import React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Ionicons } from '@expo/vector-icons';\nimport { useAuth } from '../contexts/AuthContext';\n\n// Auth Screens\nimport LoginScreen from '../screens/auth/LoginScreen';\nimport RegisterScreen from '../screens/auth/RegisterScreen';\n\n// Main Screens\nimport HomeScreen from '../screens/main/HomeScreen';\nimport ProfileScreen from '../screens/main/ProfileScreen';\nimport SuggestionsScreen from '../screens/main/SuggestionsScreen';\nimport FavoritesScreen from '../screens/main/FavoritesScreen';\nimport CameraScreen from '../screens/main/CameraScreen';\n\n// Loading\nimport LoadingScreen from '../screens/LoadingScreen';\n\nconst Stack = createStackNavigator();\nconst Tab = createBottomTabNavigator();\n\nconst TabNavigator = () => {\n  return (\n    <Tab.Navigator\n      screenOptions={({ route }) => ({\n        tabBarIcon: ({ focused, color, size }) => {\n          let iconName: keyof typeof Ionicons.glyphMap;\n\n          if (route.name === 'Home') {\n            iconName = focused ? 'home' : 'home-outline';\n          } else if (route.name === 'Suggestions') {\n            iconName = focused ? 'flash' : 'flash-outline';\n          } else if (route.name === 'Camera') {\n            iconName = focused ? 'camera' : 'camera-outline';\n          } else if (route.name === 'Favorites') {\n            iconName = focused ? 'heart' : 'heart-outline';\n          } else if (route.name === 'Profile') {\n            iconName = focused ? 'person' : 'person-outline';\n          } else {\n            iconName = 'home-outline';\n          }\n\n          return <Ionicons name={iconName} size={size} color={color} />;\n        },\n        tabBarActiveTintColor: '#ec4899',\n        tabBarInactiveTintColor: 'gray',\n        headerShown: false,\n      })}\n    >\n      <Tab.Screen name=\"Home\" component={HomeScreen} />\n      <Tab.Screen name=\"Suggestions\" component={SuggestionsScreen} />\n      <Tab.Screen name=\"Camera\" component={CameraScreen} />\n      <Tab.Screen name=\"Favorites\" component={FavoritesScreen} />\n      <Tab.Screen name=\"Profile\" component={ProfileScreen} />\n    </Tab.Navigator>\n  );\n};\n\nconst AppNavigator = () => {\n  const { user, loading } = useAuth();\n\n  if (loading) {\n    return <LoadingScreen />;\n  }\n\n  return (\n    <Stack.Navigator screenOptions={{ headerShown: false }}>\n      {user ? (\n        <Stack.Screen name=\"Main\" component={TabNavigator} />\n      ) : (\n        <>\n          <Stack.Screen name=\"Login\" component={LoginScreen} />\n          <Stack.Screen name=\"Register\" component={RegisterScreen} />\n        </>\n      )}\n    </Stack.Navigator>\n  );\n};\n\nexport default AppNavigator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}